/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Enums.PlayerGroup;
import Interfaces.ScoreInterface;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;

/**
 *
 * @author IsaacCD
 */
public class ScorePanel 
        extends javax.swing.JPanel 
        implements ScoreInterface {

    public static final Dimension MINIMUM_SIZE = new Dimension(50,50);
    
    /**
     * Creates new form ScorePanel
     */
    public ScorePanel() {
        initComponents();
        init();
    }
    private void init() {
        super.setMinimumSize(MINIMUM_SIZE);
        super.setSize(MINIMUM_SIZE);
        font = new Font("TimesRoman", Font.PLAIN, 20);
    }
    
    private Font font;
    
    int scoreLeft=0;
    int livesLeft=0;
    
    int scoreRight=0;
    int livesRight=0;
    
    public int getScoreLeft() {
        return scoreLeft;
    }
    public void setScoreLeft(int value) {
        scoreLeft=value;
        this.repaint();
    }

    public int getScoreRight() {
        return scoreRight;
    }
    public void setScoreRight(int value) {
        scoreRight = value;
        this.repaint();
    }
    
    public int getLivesLeft() {
        return livesLeft;
    }
    public void setLivesLeft(int value) {
        livesLeft=value;
        this.repaint();
    }

    public int getLivesRight() {
        return livesRight;
    }
    public void setLivesRight(int value) {
        livesRight = value;
        this.repaint();
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        try {
                paintScores(g, Color.BLACK);
                paintLives(g,Color.BLACK);
            } catch (NullPointerException ex) {
                if (ex != null) {

                }
            }
    }
    private void paintScores(Graphics g, Color color) {
        if (g != null) {
            Color oldColor = oldColor = g.getColor();
            if (color != null) {
                g.setColor(color);
            }

            int marginLeft=5;
            int marginTop=25;
            int marginRight=15;

            g.setFont(font);
            g.setColor(color);
            String leftScore = String.valueOf(getScoreLeft());
            String rightScore = String.valueOf(getScoreRight());

            if (getLivesLeft()>0) {g.drawString(leftScore, marginLeft, marginTop);}
            if (getLivesRight()>0) {g.drawString(rightScore, this.getWidth() - (marginRight+g.getFontMetrics().stringWidth(leftScore)), marginTop);}

            g.setColor(oldColor);
        }
    }
    private void paintLives(Graphics g, Color color) {
        if (g != null) {
            Color oldColor = oldColor = g.getColor();
            if (color != null) {
                g.setColor(color);
            }

            int marginLeft=35;
            int marginTop=25;
            int marginRight=15;

            g.setFont(font);
            g.setColor(color);
            String leftScore = String.valueOf(getLivesLeft());
            String rightScore = String.valueOf(getLivesRight());

            if (getLivesLeft()>0) {g.drawString(leftScore, marginLeft, marginTop);}
            if (getLivesRight()>0) {g.drawString(rightScore, this.getWidth() - (marginRight+g.getFontMetrics().stringWidth(leftScore)), marginTop);}

            g.setColor(oldColor);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(java.awt.Color.red);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setScore(PlayerGroup playerGroup, int score) {
        switch (playerGroup) {
            case Left:
                setScoreLeft(score);
                break;
            case Right:
                setScoreRight(score);
                break;
        }
    }

    @Override
    public void setLives(PlayerGroup playerGroup, int lives) {
        switch (playerGroup) {
            case Left:
                setLivesLeft(lives);
                break;
            case Right:
                setLivesRight(lives);
                break;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
